name: Main Workflow

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - uses: actions/checkout@v2
      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: yarn caching prep
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: yarn caching
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install
      - run: (cd www-next && pwd && ls -la && yarn export)
      - name: deploy preview
        uses: yanglinz/vercel-action@v19
        if: github.ref != 'refs/heads/master'
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          # Temporarily deploy the www-next version of the blog
          vercel-project-id: QmSmh3tkeGxnsvedznW7eofAJ2nyVmiCC5ogCS6YwbdvbS
          # vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: www-next/out
      - name: deploy production
        uses: yanglinz/vercel-action@v19
        if: github.ref == 'refs/heads/master'
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          # Temporarily deploy the www-next version of the blog
          vercel-project-id: QmSmh3tkeGxnsvedznW7eofAJ2nyVmiCC5ogCS6YwbdvbS
          # vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: "--prod"
          working-directory: www-next/out
